<!DOCTYPE html>
<html lang="en">
<head>
 <% include partials/head %> 
<link rel="stylesheet" href="./stylesheets/map.css">
</head>
<body>
<% include partials/menu %>

<div id="map" style="width:100%;height:100%;"></div>
<div id="menu_wrap" class="bg_white" style="display:none;">
        <ul id="placesList"></ul>
        <div id="pagination"></div>
    </div>
<img id="thispot" src="./img/thispot.png" onclick="geoLocation()"/>
<!-- <img id="sickperson" src="./img/sickperson.png"/> -->

<% include partials/foot %>
  <% include partials/script %>
  <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=d8b15cafc174093e55e3a668723818fb&libraries=clusterer,services"></script>
  <script>

    $("#logo").hide();
    $("#search").css("display", "inline");
    $("#search").click(function(){
       if($("#searchbar").css("display") == "none"){
        $("#searchbar").slideDown();
        $("#keyword").focus();
        if($("#keyword").val()!=""){
          $("#menu_wrap").fadeIn();
        }
      }else{
        $("#searchbar").slideUp();
        $("#menu_wrap").fadeOut();
        // removeMarker();
      }
    });
    $(document).keydown(function(event){
      if($("#searchbar").css("display")!="none" && event.keyCode=='13'){
        var keyword = $("#keyword").val();
        if(keyword.indexOf("확진자")>-1 || keyword.indexOf("감염자")>-1){
          searchPerson(keyword.replace(/[^0-9]/g,""));
        }else{
          searchPlaces();
        }
        
      }
    });
    var lat = 37.555800, lng = 126.969732;  //기본 위도 경도 : 서울역
    var locPosition = new kakao.maps.LatLng(lat, lng);
    navigator.geolocation.getCurrentPosition(function(position) {
      lat = position.coords.latitude, // 위도
      lng = position.coords.longitude; // 경도
            
      locPosition = new kakao.maps.LatLng(lat, lng);  
    });
    var map = new kakao.maps.Map(document.getElementById('map'), { 
        center : new kakao.maps.LatLng(lat, lng), 
        level : 7
    });
    var markers = [];
    var ps = new kakao.maps.services.Places();
    var infowindow = new kakao.maps.InfoWindow({
      map: map,
      position: locPosition,
      removable : true,
    });
    infowindow.close();

    function searchPlaces(){
      var keyword = $("#keyword").val();
      ps.keywordSearch(keyword, placesSearchCB);
    }
    function placesSearchCB(data, status, pagination) {
    if (status === kakao.maps.services.Status.OK) {
        $("#menu_wrap").fadeIn();
        displayPlaces(data);
        displayPagination(pagination);
    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {
        alert('검색 결과가 존재하지 않습니다.');
        return;
    } else if (status === kakao.maps.services.Status.ERROR) {
        alert('검색 결과 중 오류가 발생했습니다.');
        return;
    }
  }

  function searchPerson(id){
    $("#menu_wrap").fadeIn();
    $.get("./file/position.json", function(data){
      var personData = $(data.positions).map(function(i, position){
        if(Number(position.person)==id){
          return {
            // title : position.date + " " + position.time +"\n" + position.loc,
            id : id,
            datetime : position.date + " " + position.time,
            location : position.loc,
            position : new kakao.maps.LatLng(Number(position.lat), Number(position.lng))
          };
        }
      });
      if(personData.length > 0){
        displayPerson(personData);
      }else{
        alert("확진자가 존재하지 않습니다.");
        $("#menu_wrap").hide();
        return;
      }
      
    });
  }

  function displayPerson(person){
      var listEl = document.getElementById('placesList'), 
      menuEl = document.getElementById('menu_wrap'),
      fragment = document.createDocumentFragment(), 
      bounds = new kakao.maps.LatLngBounds(), 
      listStr = '';
      // var level = map.getLevel();

      removeAllChildNods(listEl);
      removeMarker();

      var linePath = [];
      for(var i=0; i<person.length; i++){
        var itemEl = getListPersonItem(i, person[i]);
        // var marker = addMarker(person[i], i, person[i].title);
        linePath.push(person[i].position);
        (function(position){
          // bounds.extend(person[i].position);

          itemEl.onmouseover =  function () {
            // map.setLevel(level);
            map.panTo(position);
          };
          itemEl.onclick = function(){
            // map.setLevel(level);
            map.panTo(position);
          };

        })(person[i].position)

        fragment.appendChild(itemEl);
      }
      listEl.appendChild(fragment);
      menuEl.scrollTop = 0;
      // map.setBounds(bounds);
      // level = map.getLevel();
      
      var polyline = new kakao.maps.Polyline({
        path: linePath, 
        strokeWeight: 5, 
        strokeColor: 'red', 
        strokeOpacity: 0.7, 
        strokeStyle: 'solid' 
      });

      polyline.setMap(map);

      $("#search").click(function(){
          polyline.setMap(null); 
      });
  }


  function displayPlaces(places) {
      var listEl = document.getElementById('placesList'), 
      menuEl = document.getElementById('menu_wrap'),
      fragment = document.createDocumentFragment(), 
      bounds = new kakao.maps.LatLngBounds(), 
      listStr = '';
      var level = map.getLevel();
      
      removeAllChildNods(listEl);
      removeMarker();
      
      for ( var i=0; i<places.length; i++ ) {
          var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),
              marker = addMarker(placePosition, i, places[i].title), 
              itemEl = getListItem(i, places[i]);
          bounds.extend(placePosition);
          (function(marker, title, placePosition) {
              kakao.maps.event.addListener(marker, 'mouseover', function() {
                  displayInfowindow(marker, title);
              });
              kakao.maps.event.addListener(marker, 'mouseout', function() {
                  infowindow.close();
              });
              kakao.maps.event.addListener(marker, 'click', function() {
                  displayInfowindow(marker, title);
              });
              itemEl.onmouseover =  function () {
                  map.setLevel(level);
                  displayInfowindow(marker, title);
              };
              itemEl.onmouseout =  function () {
                  infowindow.close();
              };
              itemEl.onclick = function(){
                $("#searchbar").css("display", "none");
                $("#menu_wrap").css("display", "none");
                // removeMarker();
                conditions(placePosition.getLat(), placePosition.getLng());
              };
          })(marker, places[i].place_name, placePosition);
          fragment.appendChild(itemEl);
      }
      listEl.appendChild(fragment);
      menuEl.scrollTop = 0;
      map.setBounds(bounds);
      level = map.getLevel();
  }
  
  function getListPersonItem(index, person){
    var el = document.createElement('li');
    var itemStr = '<span><img src="./img/sickperson.png" class="markerbgimg"></img><div class="personId">'+ (person.id)+"번 확진자 "+ (index+1) + 
                ' STEP</div></span>' +
                  '<div class="info">' +
                  '   <div>' + person.datetime + '</div>'+
                  '   <h5>' + person.location +'</h5></div>';
    el.innerHTML = itemStr;
    el.className = 'item';
    return el;

  }

  function getListItem(index, places) {
      var el = document.createElement('li'),
      itemStr = '<span class="markerbg marker_' + (index+1) + '"></span>' +
                  '<div class="info">' +
                  '   <h5>' + places.place_name + '</h5>';
      if (places.road_address_name) {
          itemStr += '    <span>' + places.road_address_name + '</span>';
      } else {
          itemStr += '    <span>' +  places.address_name  + '</span></div>'; 
      }
      el.innerHTML = itemStr;
      el.className = 'item';
      return el;
  }
  function addMarker(position, idx, title) {
      var imageSrc = './img/marker_number.png', 
          imageSize = new kakao.maps.Size(36, 37), 
          imgOptions =  {
              spriteSize : new kakao.maps.Size(36, 691), 
              spriteOrigin : new kakao.maps.Point(0, (idx*46)+10), 
              offset: new kakao.maps.Point(13, 37) 
          },
          markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),
              marker = new kakao.maps.Marker({
              position: position, 
              image: markerImage 
          });
      marker.setMap(map); 
      markers.push(marker);  
      return marker;
  }
  function removeMarker() {
      for ( var i = 0; i < markers.length; i++ ) {
          markers[i].setMap(null);
      }   
      markers = [];
  }
  function displayPagination(pagination) {
      var paginationEl = document.getElementById('pagination'),
          fragment = document.createDocumentFragment(),
          i; 
      while (paginationEl.hasChildNodes()) {
          paginationEl.removeChild (paginationEl.lastChild);
      }
      for (i=1; i<=pagination.last; i++) {
          var el = document.createElement('a');
          el.href = "#";
          el.innerHTML = i;
          if (i===pagination.current) {
              el.className = 'on';
          } else {
              el.onclick = (function(i) {
                  return function() {
                      pagination.gotoPage(i);
                  }
              })(i);
          }
          fragment.appendChild(el);
      }
      paginationEl.appendChild(fragment);
  }
  function displayInfowindow(marker, title) {
      var content = '<div style="padding:5px;z-index:1;">' + title + '</div>';
      infowindow.setContent(content);
      infowindow.open(map, marker);
  }
  function removeAllChildNods(el) {   
      while (el.hasChildNodes()) {
          el.removeChild (el.lastChild);
      }
  }
    var marker = new kakao.maps.Marker({ 
        position: map.getCenter() 
    }); 
    marker.setMap(map);
    kakao.maps.event.addListener(map, 'click', function(mouseEvent) {        
      
      locPosition = mouseEvent.latLng; 
      
      conditions(locPosition.getLat(), locPosition.getLng());
    });
    function geoLocation(){
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
            lat = position.coords.latitude, // 위도
            lng = position.coords.longitude; // 경도
            
            locPosition = new kakao.maps.LatLng(lat, lng);  
          });
        conditions(lat, lng);
        
      } else { 
          alert("현재 위치 사용 불가");
      }
    }
    $(".makeMarker .info").click(function(){
      $("this").hide();
    });
    function makeMarker(result, small, large, tempPosition){
      map.setLevel(7);
      map.panTo(tempPosition);

      content = '<div class="wrap makeMarker">' + 
                '    <div class="info">' + 
                '        <div class="title">' + result +
                '        </div>' + 
                '        <div class="body">' + 
                '            <div class="img">' +
                '                <img src="./img/mask_'+result+ '.png" width="73" height="70">' +
                '           </div>' + 
                '            <div class="desc">' + 
                '                <div class="ellipsis">반경 1키로 내 감염자 동선 '+small+'곳</div>' + 
                '                <div class="ellipsis">반경 5키로 내 감염자 동선 '+large+'곳</div>' + 
                '            </div>' + 
                '        </div>' + 
                '    </div>' +    
                '</div>';
        var marker = new kakao.maps.Marker({
          map: map,
          position: tempPosition,
          center : tempPosition,
          clickable: true
        });
        var overlay = new kakao.maps.CustomOverlay({
            content: content,
            map: map,
            position: tempPosition,
            clickable: true,
            removable: true
        });
        $(".makeMarker .info").click(function(){
          overlay.setMap(null);
        });
    }
    
    function conditions(lat, lng){
      var tempPosition = new kakao.maps.LatLng(lat, lng);
      var small = 0; //반경 1키로 이내
      var large = 0; //반경 5키로 이내
      $.get("./file/position.json", function(data){
         $(data.positions).map(function(i, position){
          var dist = distance(lat, lng, position.lat, position.lng);
            if( dist < 5){
              large++;
              if( dist < 1){
                small++;
              }
            }
         });
        var result, message;
        if(small*5 + large*1 < 5){
          result = "GOOD";
        }else if(small*5 + large*1 < 10){
          result = "SOSO";
        }else{
          result = "BAD";
        }
        // console.log(lat, lng, result, small, large);
        makeMarker(result, small, large, tempPosition);
      });
    }
    function distance(lat1, lng1, lat2, lng2){
      lat1 = Number(lat1), lng1 = Number(lng1), lat2 = Number(lat2), lng2 = Number(lng2);
      var distLat = 69.1 *(lat2 - lat1);
      var distLng = 53 * (lng2 - lng1);
      var distance = Math.sqrt(distLat*distLat + distLng*distLng);
      return distance*1.609; 
    }
    var zoomControl = new kakao.maps.ZoomControl();
    map.addControl(zoomControl, kakao.maps.ControlPosition.TOPRIGHT);
    var clusterer = new kakao.maps.MarkerClusterer({
        map: map,
        minLevel: 8,
        calculator: [4, 12],
        averageCenter: true,
        styles: [{
          width : '50px', height : '50px',
          background: 'rgba(255, 225, 0, .8)',
          borderRadius: '40px',
          color: '#000',
          textAlign: 'center',
          fontWeight: 'bold',
          lineHeight: '41px'
        },
        {
          width : '60px', height : '60px',
          background: 'rgba(255, 127, 0, .8)',
          borderRadius: '50px',
          color: '#000',
          textAlign: 'center',
          fontWeight: 'bold',
          lineHeight: '51px'
        },
        {
          width : '80px', height : '80px',
          background: 'rgba(255, 0, 0, .8)',
          borderRadius: '60px',
          color: '#000',
          textAlign: 'center',
          fontWeight: 'bold',
          lineHeight: '61px'
        }]
    });
    var dangerImage = "./img/dangerspot.png";
    var imageSize = new kakao.maps.Size(50, 55);
    var markerImage = new kakao.maps.MarkerImage(dangerImage, imageSize);
    $.get("./file/position.json", function(data){
        var dangerMarkers = $(data.positions).map(function(i, position){
            var marker_danger = new kakao.maps.Marker({
              map: map,
              position : new kakao.maps.LatLng(Number(position.lat), Number(position.lng)),
              title: position.loc+"\n"+position.date+" "+ position.time + "에 " +position.person+"번 확진자",
              image: markerImage,
              clickable: true,
            });
            // marker_danger.setMap(map);
            var contents = "<div class='infowindo'><h4>" + position.loc + "</h4><p>"+position.date+" "+ position.time + "에 "+ position.person+"번 확진자</p></div>";
            // console.log(contents);
            var infoWindow  = new kakao.maps.InfoWindow({
              content: contents,
              removable : true,
              clickable: true
            });
            kakao.maps.event.addListener(marker_danger, 'click', function(){
              infoWindow.open(map, marker_danger);
            });
            return marker_danger;
        });
        clusterer.addMarkers(dangerMarkers);
    });


  </script>
  </body>
</html>